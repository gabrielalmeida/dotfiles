# Zplug
if [[ ! -d ~/.zplug ]]; then
    echo "ya"
    git clone https://github.com/zplug/zplug ~/.zplug
    source ~/.zplug/init.zsh && zplug update --self
fi

source ~/.zplug/init.zsh
zplugs=()

zplug "mafredri/zsh-async", from:github
zplug "marlonrichert/zsh-autocomplete", from:github
zplug "sindresorhus/pure", use:pure.zsh, from:github, as:theme
zplug 'plugins/git', from:oh-my-zsh, defer:1
zplug "plugins/brew", from:oh-my-zsh, defer:1
zplug "plugins/brew-cask", from:oh-my-zsh, defer:1
zplug "plugins/git",   from:oh-my-zsh, defer:1
zplug "plugins/osx", from:oh-my-zsh, defer:1, if:"[[ $OSTYPE == *darwin* ]]"
zplug "lib/directories", from:oh-my-zsh, defer:1, if:"[[ $OSTYPE == *darwin* ]]"
zplug "b4b4r07/enhancd", use:init.sh, defer:1
zplug "plugins/colorize", from:oh-my-zsh
zplug "zsh-users/zsh-completions"
zplug "zsh-users/zsh-history-substring-search"
zplug "zsh-users/zsh-autosuggestions"
zplug "zsh-users/zsh-syntax-highlighting", defer:2
zplug "lib/clipboard", from:oh-my-zsh, if:"[[ $OSTYPE == *darwin* ]]"
zplug "tcnksm/docker-alias", use:zshrc
zplug "agkozak/zsh-z"

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Then, source plugins and add commands to $PATH
zplug load

# turn on git stash status
zstyle :prompt:pure:git:stash show yes

# Use hub binary instead of git
command -v hub >/dev/null 2>&1 && eval "$(hub alias -s)"

# Load thefuck
command -v fuck >/dev/null 2>&1 && eval $(thefuck --alias) 

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# z -- using fasd for now
# source `brew --prefix`/etc/profile.d/z.sh

# fasd 
fasd_cache="$HOME/.fasd-init-bash"
if [ "$(command -v fasd >/dev/null 2>&1)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init auto >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

#doctl
command -v doctl >/dev/null 2>&1 && source <(doctl completion zsh)

# Jenv
command -v jenv >/dev/null 2>&1 && eval "$(jenv init -)" && \
export JAVA_HOME="$(jenv prefix)"

# Pyenv
command -v pyenv >/dev/null 2>&1 && eval "$(pyenv init -)"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/Users/gbr/Downloads/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/gbr/Downloads/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/Users/gbr/Downloads/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/gbr/Downloads/google-cloud-sdk/completion.zsh.inc'; fi
export VOLTA_HOME="$HOME/.volta"
export PATH="$VOLTA_HOME/bin:$PATH"

if [ -f ~/.private-tokens ]; then
  source ~/.private-tokens
fi
